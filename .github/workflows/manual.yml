# This is a basic workflow that is manually triggered

name: Manual E2E workflow
run-name: Build - from the user @${{github.actor}} and event ${{github.event_name}}

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build_job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: step 1 Checkout 
        uses: actions/checkout@v3.5.3
    # Runs a single command using the runners shell
      - name: Send greeting
        run: echo "Hello ${{ inputs.name }}"
        
      - name: Setup Java JDK 11
        uses: actions/setup-java@v1.4.4
        with:
          java-version:  '11'
          cache: 'maven' 
      - name: Run unit tests
        run: mvn test
        
  analyze_job:
    runs-on: ubuntu-latest
    permissions: 
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'java' ]
    steps:
      - name: step 1 Checkout 
        uses: actions/checkout@v3.5.3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
          
  cleanUp_job:
    needs: [build_job]
    runs-on: ubuntu-latest
    environment: UAT
    steps: 
      - name: "Clean up destination at ${{vars.UAT_IP}}"
        uses: appleboy/ssh-action@master
        with:
         host: ${{vars.UAT_IP}}
         port: ${{vars.UAT_PORT}}
         username: ${{secrets.USER}}
         password: ${{secrets.SSH_KEY}}
         script: |
           rm -rf ./deployment/*
           rm -rf ${{vars.UAT_TOMCAT}}/digi*
           
  deployment_job:
    needs: [cleanUp_job]
    runs-on: ubuntu-latest
    environment: UAT
    steps:  
    -  uses: actions/download-artifact@v2.1.1
       with:
         name: 'digibank.war'
         path: './deploy'
    -  run: ls -ltr ./deploy
    -  run: ls -lah
    -  name: "Deployment at ${{vars.UAT_IP}}"
       uses: appleboy/scp-actio@master
       with:
         host: ${{vars.UAT_IP}}
         port: ${{vars.UAT_PORT}}
         username: ${{secrets.USER}}
         password: ${{secrets.SSH_KEY}}
         source: '.deploy/digibank.war'
         target: 'deployment'

  install_job:
    needs: [deployment_job]
    runs-on: ubuntu-latest
    environment: UAT
    steps:  
      - name: "Installing the app in the server at ${{vars.UAT_IP}}"
        uses: appleboy/ssh-action@master
        with:
         host: ${{vars.UAT_IP}}
         port: ${{vars.UAT_PORT}}
         username: ${{secrets.USER}}
         password: ${{secrets.SSH_KEY}}
         script: |
           cp -f /home/ec2-user/deployment/deploy/digibank.war  ${{vars.UAT_TOMCAT}}
           
      - name: 'Sleep'
        run: sleep 10s
        shell: bash
